from typing import List

from WB.content.requests.loading.cards_upload_data import Subject
from WB.request_executor import AbsRequestExecutor, SERVER
from WB.content.responses.loading.response_card_create import ResponseCardCreate
from WB.serializers import to_dict, from_dict

URL = f"{SERVER}/content/v2/cards/upload"


class RequestCardsUploadAPI(AbsRequestExecutor):
    """
    **Создание карточки товара**

    Создание карточки товара происходит асинхронно, при отправке запроса на
     создание карточки ваш запрос становится в очередь на создание.
     **Внимание**. Карточка считается созданной, если создалась хотя бы
     одна номенклатура в ней. Если во время обработки запроса в очереди
     выявляются ошибки, то номенклатура считается ошибочной.

    Как создать карточку:
    1. Получите список всех категорий с помощью метода `Родительские
       категории товаров`
    2. Получите список доступных предметов (подкатегорий) с помощью метода
     `Список предметов (подкатегорий)`
    3. Получите характеристики, которые можно задавать в этом предмете
     (подкатегории), с помощью метода `Характеристики предмета (подкатегории)`.
    Для характеристик Цвет, Страна производства, Сезон, Ставка НДС, ТНВЭД
     используйте значения из раздела `Конфигуратор`.
    4. Отправьте запрос. Если ответ Успешно (200), но какие-то карточки
     не создались, проверьте ошибки с помощью метода `Список несозданных
      номенклатур (НМ) с ошибками`.

    В одном запросе можно создать максимум 100 карточек (`imtID`)
     и по 30 номенклатур (`nmID`) в каждой. Максимальный размер
     запроса 10 Мб.

    Габариты товаров можно указать только в **сантиметрах**.
    """

    def execute(self, cards_data: List[Subject]) -> ResponseCardCreate:
        response = self._post(url=URL, json=to_dict(cards_data))
        if response:
            return from_dict(ResponseCardCreate, response)
